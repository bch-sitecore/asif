[CmdletBinding()]
Param(
  [Parameter(Position = 0)]
  [string]$Destination = "~\resourcefiles"
  ,
  [Parameter(Position = 1)]
  [ValidateNotNullOrEmpty()]
  [string]$FileName = "SIF.Extension.ASIF.ps1"
)
$ErrorActionPreference = "Stop"

$src = Join-Path $PSScriptRoot -ChildPath "src"
if ($Destination.IndexOf("~") -gt -1) {
  $Destination = $Destination -replace "~", $PSScriptRoot
}

If (!(Test-Path $Destination)) {
  Write-Output "Creating ${Destination}"
  New-Item $Destination -ItemType Directory | Out-Null
}

$output = Join-Path $Destination -ChildPath $FileName
Write-Output "Generating ${output}"
"#`n# Auto-generated by build, do not modify this file directly.`n#" | Set-Content $output
Get-ChildItem $src -Include "*.ps1" -Exclude "*.Tests.ps1" -Recurse | ForEach-Object {
  $script = $_.FullName
  $scriptName = $_.Name

  Write-Output "  + ${scriptName}"
  $analysis = Invoke-ScriptAnalyzer $script -Severity Error -Fix
  Get-ScriptAnalyzerRule | ForEach-Object {
    $ruleName = $_
    
    If ($analysis.RuleName -contains $ruleName) {
      $analysis | Where-Object "RuleName" -EQ $ruleName -OutVariable "failures" | Out-Default
      If ($failures.Count) {
        Write-Warning "    ${ruleName}: $($failures.Count) failures"
      }
    }
  }

  "<# ${scriptName} #>" | Add-Content $output
  Get-Content $script | Add-Content $output
}

Write-Output "Source build complete"